<%
  value ||= nil
  files = value.try(:files)
  controller ||= false
  source_cleaner_conf = Cms::SourceCleanerTemplate.site(@cur_site).and_public.to_config(site: @cur_site)
  page = @page.presence || @item

  upload_api_path = cms_frames_temp_files_uploads_path(site: @cur_site, cid: @cur_node || "-")
  file_api_path = cms_frames_temp_files_files_path(site: @cur_site, cid: @cur_node || "-")
  select_api_path = select_cms_frames_temp_files_file_path(site: @cur_site, cid: @cur_node || "-", id: ':id', file_view: { name: "#{f.object_name}[][in_wrap][file_ids][]" })
  view_api_path = view_cms_apis_content_file_path(id: ":id")
%>
<%= render 'cms/agents/columns/main/base', f: f, column: column, value: value, controller: controller do |id| %>
  <% editor_id = "#{id}-html" %>
  <%= text_area_tag("#{f.object_name}[][in_wrap][value]", value.try(:value), column.form_options.merge(id: editor_id, class: "html", style: "height: 400px;", data: { syntax_check: "editor", syntax_check_name: column.name })) %>
  <%= html_editor "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>

  <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
    <% @buttons << :source_cleaner %>
  <% end %>
  <% @buttons << :related_pages %>

  <%= jquery do %>
    <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
      if (!Cms_Source_Cleaner.config) {
        Cms_Source_Cleaner.config = <%= raw source_cleaner_conf.to_json %>
      }
      Cms_Source_Cleaner.confirms.clean = <%== t("cms.confirm.source_clean").to_json %>;
      Cms_Source_Cleaner.render(<%== "##{id}-source-cleaner".to_json %>, <%== { editor: editor_id }.to_json %>);
    <% end %>

    $(<%== "##{id}".to_json %>).on({
      "column:beforeMove": function() {
        var editor = $(<%== "##{editor_id}".to_json %>).data("ckeditorInstance");
        if (editor) {
          Cms_Editor_CKEditor.destroy(<%== "##{editor_id}".to_json %>)
        }
      },
      "column:afterMove": function() {
        <%= html_editor_js "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>
      }
    });

    <% if @cur_node.blank? || page.try(:opendata_dataset_state) == 'none' %>
      $(".od-resource-file-meta").hide();
    <% end %>
  <% end %>

  <% @extra_bodies << proc do %>
    <div class="cms-addon-file" data-controller="ss--file-select-box">
      <script type="application/json" data-ss--file-select-box-target="option">
        <%==
          {
            "uploadApi" => upload_api_path,
            "fileApi" => file_api_path,
            "selectApi" => select_api_path,
            "viewApi" => view_api_path,
            "dialogType" => "ss",
            "selectionType" => "append",
            "editorId" => editor_id
          }.to_json
        %>
      </script>

      <%# hidden_field_tag("#{f.object_name}[][in_wrap][file_ids][]", "", id: nil)  %>

      <div class="cms-addon-file-upload-actions">
        <div class="ss-btn-group" role="group" aria-label="<%= t('ss.upload_or_select_from_list') %>">
          <%= button_tag t('ss.buttons.upload'), type: :button, name: 'upload', class: "btn", data: { action: "ss--file-select-box#openDialog" } %>
          <%= button_tag t("ss.buttons.select_from_list"), type: :button, name: 'file', class: "btn", data: { action: "ss--file-select-box#openDialog" } %>
        </div>
      </div>

      <div class="cms-addon-file-drop-area" data-ss--file-select-box-target="fileUploadDropArea">
        <span class="cms-addon-file-drop-notice"><%= t('ss.notice.file_droppable') %></span>
      </div>

      <div class="cms-addon-file-selected-files-wrap">
        <div class="cms-addon-file-order">
          <div class="ss-btn-group" role="group" aria-label="<%= t("mongoid.attributes.ss/document.sort") %>">
            <%= button_tag t('ss.buttons.file_name_order'), type: :button, name: "by-name", class: "btn", value: "name", aria: { pressed: false }, data: { action: "ss--file-select-box#reorderSelectedFiles" } %>
            <%= button_tag t('ss.buttons.file_upload_order'), type: :button, name: "by-upload", class: "btn", value: "upload", aria: { pressed: true }, data: { action: "ss--file-select-box#reorderSelectedFiles" } %>
          </div>
          <%= @model.tt :file_order %>
        </div>

        <div class="cms-addon-file-selected-files" data-ss--file-select-box-target="result">
          <%# アップロード順とは、ID順のこと %>
          <% if files.present? %>
            <% files.reorder(id: -1).each do |file| %>
              <% file = file.becomes_with_model %>
              <%=
                component = SS::FileViewV2Component.new(
                  cur_site: @cur_site, cur_user: @cur_user, cur_node: @cur_node, page: @page, item: @item, file: file,
                  name: "#{f.object_name}[][in_wrap][file_ids][]")
                render component
              %>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
<% end %>
