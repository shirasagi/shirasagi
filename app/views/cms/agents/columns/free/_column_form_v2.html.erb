<%
  value ||= nil
  files = value.try(:files)
  controller ||= false
  source_cleaner_conf = Cms::SourceCleanerTemplate.site(@cur_site).and_public.to_config(site: @cur_site)
  page = @page.presence || @item
  opendata_assoced = @cur_node && @cur_node.try(:opendata_sites).present? && page.respond_to?(:opendata_resources)

  cid = @cur_node || "-"
  setting = { field_name: "#{f.object_name}[][in_wrap][file_ids][]" }
  setting = JSON::JWT.new(setting).sign(Rails.application.secret_key_base).to_s
  select_api_path = select_cms_frames_temp_files_file_path(site: @cur_site, cid: cid, setting: setting, id: ':id')
%>
<%= render 'cms/agents/columns/main/base', f: f, column: column, value: value, controller: controller do |id| %>
  <% editor_id = "#{id}-html" %>
  <%= text_area_tag("#{f.object_name}[][in_wrap][value]", value.try(:value), column.form_options.merge(id: editor_id, class: "html", style: "height: 400px;", data: { syntax_check: "editor", syntax_check_name: column.name })) %>
  <%= html_editor "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>

  <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
    <% @buttons << :source_cleaner %>
  <% end %>
  <% @buttons << :related_pages %>

  <%= jquery do %>
    <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
      if (!Cms_Source_Cleaner.config) {
        Cms_Source_Cleaner.config = <%= raw source_cleaner_conf.to_json %>
      }
      Cms_Source_Cleaner.confirms.clean = <%== t("cms.confirm.source_clean").to_json %>;
      Cms_Source_Cleaner.render(<%== "##{id}-source-cleaner".to_json %>, <%== { editor: editor_id }.to_json %>);
    <% end %>

    $(<%== "##{id}".to_json %>).on({
      "column:beforeMove": function() {
        var editor = $(<%== "##{editor_id}".to_json %>).data("ckeditorInstance");
        if (editor) {
          Cms_Editor_CKEditor.destroy(<%== "##{editor_id}".to_json %>)
        }
      },
      "column:afterMove": function() {
        <%= html_editor_js "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>
      }
    });

    <% if @cur_node.blank? || page.try(:opendata_dataset_state) == 'none' %>
      $(".od-resource-file-meta").hide();
    <% end %>
  <% end %>

  <% @extra_bodies << proc do %>
    <%=
      component = SS::FileSelectBoxComponent.new(
        ss_mode: @ss_mode, cur_site: @cur_site, cur_user: @cur_user, cur_node: @cur_node, page: @page, item: @item,
        field_name: "#{f.object_name}[][in_wrap][file_ids][]", html_editor_id: editor_id,
        files: files.try(:reorder, id: -1) || [], select_api_path: select_api_path, show_opendata: opendata_assoced
      )
      render component
    %>
  <% end %>
<% end %>
