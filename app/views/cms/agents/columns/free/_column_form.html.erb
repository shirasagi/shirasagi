<% value ||= nil %>
<% files = value.try(:files) %>
<% controller ||= false %>
<% source_cleaner_conf = Cms::SourceCleanerTemplate.site(@cur_site).and_public.to_config(site: @cur_site) %>
<% page = @page.presence || @item %>
<% opendata_assoced = @cur_node && @cur_node.try(:opendata_sites).present? && page.respond_to?(:opendata_resources) %>
<% licenses = Opendata::License.in(site_id: @cur_node.try(:opendata_site_ids)).and_public.pluck(:name, :id) if opendata_assoced %>
<%= render 'cms/agents/columns/main/base', f: f, column: column, value: value, controller: controller do |id| %>
  <% editor_id = "#{id}-html" %>
  <%= text_area_tag("#{f.object_name}[][in_wrap][value]", value.try(:value), column.form_options.merge(id: editor_id, class: "html", style: "height: 400px;")) %>
  <%= html_editor "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>

  <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
    <% @buttons << :source_cleaner %>
  <% end %>
  <% @buttons << :related_pages %>

  <%= jquery do %>
    <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
      if (!Cms_Source_Cleaner.config) {
        Cms_Source_Cleaner.config = <%= raw source_cleaner_conf.to_json %>
      }
      Cms_Source_Cleaner.confirms.clean = <%== t("cms.confirm.source_clean").to_json %>;
      Cms_Source_Cleaner.render(<%== "##{id}-source-cleaner".to_json %>, <%== { editor: editor_id }.to_json %>);
    <% end %>

    Cms_Form.addSyntaxCheck("<%= id %>", {
      name: "<%= column.name %>",
      resolve: "html",
      getContent: function () { return Cms_Form.getEditorHtml("<%= editor_id %>"); },
      setContent: function (content) { Cms_Form.setEditorHtml(content, { id: "<%= editor_id %>" }); },
    });

    $(<%== "##{id}".to_json %>).on({
      "column:beforeMove": function() {
        var editor = $(<%== "##{editor_id}".to_json %>).data("ckeditorInstance");
        if (editor) {
          editor.destroy();
        }
      },
      "column:afterMove": function() {
        <%= html_editor_js "##{editor_id}", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>
      }
    });

    <% if @cur_node.blank? || page.try(:opendata_dataset_state) == 'none' %>
      $(".od-resource-file-meta").hide();
    <% end %>
  <% end %>

  <% @extra_bodies << proc do %>
    <span class="upload-menu-new">
      <% if @cur_node %>
        <%= link_to t('ss.links.upload'), cms_apis_node_temp_files_path(cid: @cur_node, owner_item_id: page.id, owner_item_type: @model.to_s), class: "ajax-box btn btn-file-upload" %>
      <% else %>
        <%= link_to t('ss.links.upload'), cms_apis_temp_files_path(owner_item_id: page.id, owner_item_type: @model.to_s), class: "ajax-box btn btn-file-upload" %>
      <% end %>
    </span>
    <span class="upload-menu-select">
      <%= link_to t("sns.user_file"), cms_apis_user_files_path(cid: @cur_node || '-'), class: "ajax-box btn btn-file-upload" %>
      <%= link_to t("cms.file"), cms_apis_files_path(cid: @cur_node || '-'), class: "ajax-box btn btn-file-upload" %>
    </span>

    <div class="column-value-upload-drop-area">
      <span class="column-value-upload-drop-notice"><%= t('ss.notice.file_droppable') %></span>
    </div>

    <div class="column-upload-file-order">
      <%= button_tag t('ss.buttons.file_name_order'), { type: :button, class: "btn column-file-order-btn btn-active", value: "name" } %>
      <%= button_tag t('ss.buttons.file_upload_order'), { type: :button, class: "btn column-file-order-btn", value: "upload" } %>
      <%= @model.tt :file_order %>
    </div>

    <div class="column-value-files<% if files.blank? %> hide<% end %>">
      <% if files.present? %>
        <% files.each do |file| %>
          <div class="file-view" data-file-id="<%= file.id %>" data-name="<%= file.name %>" data-humanized-name="<%= file.humanized_name %>" data-url="<%= file.url %>" data-thumb-url="<%= file.thumb_url %>" data-extname="<%= file.extname %>">
            <%= sanitizer_status(file) %>
            <%= link_to file.url, class: :thumb, target: "_blank", rel: "noopener" do %>
              <% if file.image? %>
                <%= image_tag file.thumb_url, alt: file.name %>
              <% else %>
                <span class="ext icon-<%= file.extname %>"><%= file.extname %></span>
              <% end %>
              <div class="properties">
                <span><%= I18n.t("sns.filename") %>: <%= file.name %></span><br>
                <% if file.image? %>
                  <% width, height = file.image_dimension %>
                  <span><%= t("sns.w_h") %>: <%= width %> x <%= height %></span><br>
                <% end %>
                <span><%= t("sns.size") %>: <%= number_to_human_size(file.size) %></span><br>
                <span><%= t("sns.datetime") %>: <%= file.updated.strftime("%Y/%m/%d %H:%M") %></span><br>
                <% if file.user.present? %>
                  <span><%= t("sns.user") %>: <%= file.user.name %></span><br>
                <% end %>
              </div>
            <% end %>

            <div class="name">
              <label>
                <%= hidden_field_tag("#{f.object_name}[][in_wrap][file_ids][]", file.id, id: nil) %>
                <%= file.name %>
              </label>
            </div>

            <div class="action">
              <%= link_to t("sns.file_attach"), "#", class: "btn-file-attach" %>
              <% if file.image? %>
                <%= link_to t("sns.image_paste"), "#", class: "btn-file-image-paste" %>
                <%= link_to t("sns.thumb_paste"), "#", class: "btn-file-thumb-paste" %>
              <% end %>
              <%= link_to t("ss.buttons.delete"), "#", class: "btn-file-delete" %>
            </div>

            <% if opendata_assoced %>
              <dl class="od-resource-file-meta">
                <dt><%= t('cms.opendata_ref/resource.license_id') %></dt>
                <dd>
                  <%= select_tag "item[opendata_resources][#{file.id}][license_ids]", options_for_select(licenses, page.opendata_resources_licenses(file).first.try(:id)), include_blank: true %>
                </dd>

                <dt><%= t('cms.opendata_ref/resource.text') %></dt>
                <dd><%= text_area_tag "item[opendata_resources][#{file.id}][text]", page.opendata_resources_text(file) %></dd>

                <dt><%= t('cms.opendata_ref/resource.state') %></dt>
                <dd>
                  <%= select_tag "item[opendata_resources][#{file.id}][state]", options_for_select(page.opendata_resource_state_options, page.opendata_resources_state(file)), class: 'od-resource-file-state', data: { 'file-id' => file.id } %>
                </dd>
              </dl>
            <% end %>
          </div>
        <% end %>
      <% end %>
    </div>
  <% end %>

  <%= jquery do %>
    Cms_Column_Free.render(<%== "##{id}".to_json %>, <%== { objectName: f.object_name, editorId: "##{editor_id}" }.to_json %>);

    var hostUrl = "<%= @cur_site.url %>";

    var insertContent = function(unique_id, cont) {
      if (typeof tinymce !== "undefined") {
        tinymce.get(Cms_Form.editorId).execCommand("mceInsertContent", false, cont);
      } else if (typeof CKEDITOR !== "undefined") {
        CKEDITOR.instances["column-value-" + unique_id + "-html"].insertHtml(cont);
      }
    };

    $('#addon-cms-agents-addons-form-page a.ajax-box.related-pages').data('on-select', function ($item) {
      var data = $item.closest("[data-id]");
      var href = hostUrl + data.find(".filename").text();
      var label = data.find(".select-item").text();
      var text = ejs.render("<a href=\"<%%= href %>\"><%%= label %></a>", { href: href, label: label });
      var unique_id = $('#unique_id').val();
      insertContent(unique_id, text);
    });

    new Cms_UploadFileOrder('columsForm', '.column-file-order-btn');
  <% end %>
<% end %>
