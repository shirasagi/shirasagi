<% addon ||= local_assigns.fetch(:addon, {})%>

<%= jquery do %>
  var $form = $('.mod-cms-html-form');
  var $select = $form.find('select[name="item[loop_setting_id]"]');



  // スニペット貼り付け機能
  // 選択可能なループ設定のID => HTML のマップを生成
  var loopSettingHtmlMap = {};
  <% Cms::LoopSetting.site(@cur_site).public_state.each do |ls| %>
    loopSettingHtmlMap['<%= ls.id %>'] = <%= (ls.html || '').to_json.html_safe %>;
  <% end %>

  $(document).on("click", "[data-action='layout-snippet#insert']", function() {
    var selectedLoopSettingId = $("select[name='item[loop_setting_id]']").val();
    console.log("選択されたloop_setting_id:", selectedLoopSettingId);

    if (selectedLoopSettingId && loopSettingHtmlMap[selectedLoopSettingId] !== undefined) {
      var $htmlArea = $("textarea[name='item[html]']");
      var newHtml = loopSettingHtmlMap[selectedLoopSettingId] || '';

      // CodeMirror があれば末尾に追記、なければ textarea に追記
      var cm = $htmlArea.data('editor');
      if (!cm) {
        var cmEl = $htmlArea.next('.CodeMirror')[0];
        if (cmEl && cmEl.CodeMirror) { cm = cmEl.CodeMirror; }
      }

      if (cm && typeof cm.getDoc === 'function') {
        var doc = cm.getDoc();
        var cur = doc.getValue();
        var needsLF = cur.length > 0 && !/\n$/.test(cur);
        var lastLine = doc.lastLine();
        var lastCh = doc.getLine(lastLine).length;
        doc.replaceRange((needsLF ? "\n" : "") + newHtml, { line: lastLine, ch: lastCh });
        $htmlArea.val(doc.getValue());
      } else {
        var curVal = $htmlArea.val() || '';
        var needsLF2 = curVal.length > 0 && !/\n$/.test(curVal);
        $htmlArea.val(curVal + (needsLF2 ? "\n" : "") + newHtml);
      }
    }
  });
<% end %>

<dl class="see mod-cms-html-form">
  <dt class="wide"><%= @model.t :loop_setting_id %><%= @model.tt :loop_setting_id %></dt>
  <dd class="wide">
    <%= f.select :loop_setting_id, ancestral_html_settings_liquid, include_blank: t('cms.input_directly')  %>
    <button type="button" data-action="layout-snippet#insert" style="margin-left: 10px;"><%= t('cms.buttons.insert_snippet') %></button>
  </dd>
  <dt class="wide"><%= @model.t :html %><%= @model.tt :html %></dt>
  <dd class="wide">
    <%= f.text_area :html, style: "height: 400px" %>

    <% if example = @item.try(:form_example_layout_html) %>
      <div class="form-example">
        <div class="form-example-head example-layout-html"><%= t 'ss.input_example' %></div>
        <div class="form-example-body example-layout-html"><%= example %></div>
      </div>
    <% end %>
  </dd>
  <%=
    component = Cms::BodyCheckerComponent.new(
      cur_site: @cur_site, cur_user: @cur_user, cur_node: @cur_node, item: @item, limits: %i[syntax link],
      syntax_check_context: @syntax_context
    )
    syntax_checker_form = render(component)
    if syntax_checker_form.present?
      tag.dd syntax_checker_form, class: "wide"
    end
  %>
</dl>

<%= code_editor "##{addon[:id]} textarea", mode: :html %>

<% if @syntax_context&.errors.present? && @cur_user.cms_role_permit_any?(@cur_site, "edit_cms_ignore_syntax_check") %>
  <label>
    <%= check_box_tag "ignore_syntax_check", 1, false, id: nil %>
    <%= t("ss.buttons.ignore_alerts_and_save") %>
  </label>
<% end %>
