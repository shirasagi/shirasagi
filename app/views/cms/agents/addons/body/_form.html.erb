<%
  source_cleaner_conf = Cms::SourceCleanerTemplate.site(@cur_site).and_public.to_config(site: @cur_site)

  syntax_check = cms_syntax_check_enabled?
  link_check = @cur_site.form_alert_link_check_enabled?

  addon ||= local_assigns.fetch(:addon, {})
  if @item.respond_to?(:form) && @item.form.present?
    css_class = Array(addon[:class])
    addon[:class] = css_class + %w(hide)
  end
%>

<% if SS.config.cms.html_editor == "markdown" %>

  <%= jquery do %>
    SS_Addon_Markdown.render();
    SS_Addon_Markdown.renderFormMarkdown()
  <% end %>

  <div class="ss-addon-markdown">
    <div class="ss-addon-markdown-toolbar"></div>
    <div class="ss-addon-markdown-content">
      <%= f.text_area :markdown, class: "markdown", style: "height: 240px;" %>
    </div>
  </div>

<% else %>
  <%= html_editor ".mod-cms-body .html", advanced: Cms::EditorExtension.allowed?(:use, @cur_user, site: @cur_site) %>
  <%= jquery do %>
    Link_Checker.url               = "<%= SS.config.cms.link_check_url %>";
    Link_Checker.rootUrl           = "<%= @cur_site.full_root_url %>";
    Mobile_Size_Checker.enabled    = <%= @cur_site.mobile_enabled? %>;
    Mobile_Size_Checker.url        = <%== cms_apis_mobile_size_check_path(format: "json").to_json %>;
    <% if params[:action] =~ /edit|delete/ && @item.is_a?(Cms::Model::Page) && @item.persisted? %>
      Backlink_Checker.enabled     = true;
      Backlink_Checker.itemId      = <%== @item.try(:id).to_json %>;
      Backlink_Checker.url         = <%== cms_apis_backlink_check_path(format: "json").to_json %>;
    <% end %>

    Form_Preview.page_route        = "<%= @item.try(:route) %>";
    Form_Preview.form_preview_path = "<%= cms_form_preview_path(path: "#{tryb{@cur_node.filename + "/"}}.html") %>";

    <% if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
      Cms_Source_Cleaner.config = <%= raw source_cleaner_conf.to_json %>
      Cms_Source_Cleaner.confirms.clean = <%== t("cms.confirm.source_clean").to_json %>;
      Cms_Source_Cleaner.render(".source-cleaner");
    <% end %>

    Syntax_Checker.url = <%= raw cms_apis_check_syntax_check_path(format: "json").to_json %>
    Syntax_Checker.correct_url = <%= raw cms_apis_correct_syntax_check_path(format: "json").to_json %>

    Cms_Form.options.check.syntax = <%= syntax_check %>;
    Cms_Form.options.check.link = <%= link_check %>;
    Cms_Form.render();

  <% end %>

  <dl class="see mod-cms-body">
    <dd class="wide"><%= f.text_area :html, class: "html", style: "height: 400px;", data: { syntax_check: 'editor', syntax_check_name: t("modules.addons.cms/body") } %></dd>
    <dd class="wide">
    <%= button_tag t("cms.syntax_check"), { type: :button, class: "btn syntax-check" } if syntax_check %>
    <%= button_tag t("cms.mobile_size_check"), { type: :button, class: "btn mobile-size-check" } if @cur_site.mobile_enabled? %>
    <% if !SS::Lgwan.enabled? || SS::Lgwan.web? %>
      <%= button_tag t("cms.link_check"), { type: :button, class: "btn link-check" } %>
    <% end %>
    <%= button_tag t("cms.source_cleaner"), { type: :button, class: "btn source-cleaner" } if source_cleaner_conf[:source_cleaner].present? || source_cleaner_conf[:source_cleaner_site_setting].present? %>
    <% if !@inplace_mode && @item.respond_to?(:route) %>
      <%= button_tag t("cms.preview_page"), { type: :button, class: "btn preview" } %>
    <% end %>
    <% if !@inplace_mode %>
      <%
        page_params = {}
        if @cur_node
          page_params[:s] = { node: @cur_node }
        end
      %>
      <%= link_to t("cms.apis.related_pages.index"), cms_apis_pages_path(page_params), class: "ajax-box related-pages" %>
    <% end %>
    </dd>
  </dl>

  <%= jquery do %>
    var hostUrl = "<%= @cur_site.url %>";
    $('#addon-cms-agents-addons-body a.ajax-box.related-pages').data('on-select', function ($item) {
        var data = $item.closest("[data-id]");
        var href = hostUrl + data.find(".filename").text();
        var label = data.find(".select-item").text();
        var text = ejs.render("<a href=\"<%%= href %>\"><%%= label %></a>", { href: href, label: label });
        SS_FileView.insertContent(text);
    });

    $('input:submit').on('click', function (e) {
        var form = $(this).closest('form');
        var selectElement = form.find('[name="in_form_id"]');

        if (selectElement.length > 0) {
            var selectedValue = selectElement.val();

            if (selectedValue === '') {
                var textArea = form.find('textarea[name="item[html]"]');
                var hrefs = [];

                if (textArea.length > 0) {
                    var htmlContent = textArea.val();

                    var hrefRegex = /href="(.*?)"/g;
                    var match;
                    while ((match = hrefRegex.exec(htmlContent)) !== null) {
                        hrefs.push(match[1]);
                    }
                }

                if (hrefs.length > 0) {
                    e.preventDefault();
                    showLoader(); // Show loader while waiting for the AJAX call

                    $.ajax({
                        type: "POST",
                        url: "/.cms/link_check/check.json",
                        cache: false,
                        data: JSON.stringify({
                            "url": hrefs,
                            "root_url": "https://example.com"
                        }),
                        contentType: 'application/json',
                        dataType: "json",
                        crossDomain: true,
                        success: function (res) {
                            hideLoader(); // Hide the loader on success
                            var results = [];
                            var hasFailures = false;

                            $.each(res, function (link, result) {
                                var code = result["code"];
                                var message = result["message"];
                                var state = (code == 200);
                                var resultMessage = "";

                                if (state) {
                                    resultMessage += "Success: " + link + "<br>";
                                } else {
                                    resultMessage += "Failure: " + link + "<br>";
                                    hasFailures = true;
                                }

                                if (message) {
                                    resultMessage += "Details: " + message + "<br>";
                                }

                                results.push(resultMessage);
                            });

                            if (hasFailures) {
                                showAlert(results.join("<br>"), form);
                            } else {
                                form.submit();
                            }
                        },
                        error: function (xhr) {
                            hideLoader(); // Hide the loader on error
                            showAlert("Error checking links. Please try again.");
                        }
                    });
                }
            }
        }
    });

    // Function to show a loader
    function showLoader() {
        var loaderHtml = `
            <div id="loaderOverlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 9999; display: flex; justify-content: center; align-items: center;">
                <div class="spinner-border text-light" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        `;
        $('body').append(loaderHtml);
    }

    // Function to hide the loader
    function hideLoader() {
        $('#loaderOverlay').remove();
    }

    // Function to show an alert with Close and Ignore Warnings buttons
    function showAlert(message, form) {
        var $div = $('<div/>', { id: "alertExplanation", class: "errorExplanation" });
        $div.append("<h2>Link Check Results</h2>");
        $div.append($('<div/>').html(message));

        var $footer = $(document.createElement("footer")).addClass('send');
        $footer.append('<button type="button" class="btn btn-secondary cancel">Close</button>');
        $footer.append('<button type="button" class="btn btn-primary ignore-warnings">無視して進む</button>'); // Ignore Warnings in Japanese

        $.colorbox({
            html: $div.get(0).outerHTML + $footer.get(0).outerHTML,
            maxHeight: "80%",
            fixed: true
        });

        $("#cboxLoadedContent").find(".cancel").on("click", function () {
            $.colorbox.close();
            return false;
        });

        $("#cboxLoadedContent").find(".ignore-warnings").on("click", function () {
            $.colorbox.close();
            form.submit(); // Proceed with form submission
        });
    }
  <% end %>


<% end %>
