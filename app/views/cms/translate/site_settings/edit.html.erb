<%= form_for :item, url: { action: :update }, html: { id: "item-form", method: :put, multipart: true, autocomplete: :off } do |f| %>
  <%= error_messages_for :item %>

  <%= hidden_field_tag :_updated, params[:_updated] || @item.updated if @item.respond_to?(:updated) %>

  <div class="addon-views">
    <%
      addon_options = {}
      addon_options[:id] = "addon-basic"
      addon_options[:head] = @addon_basic_name || t("ss.basic_info")
    %>
    <% buf = render file: "_form", locals: { f: f, addon: addon_options } %>
    <%= render "ss/crud/addon", addon: addon_options do %>
      <%= buf %>
    <% end %>
  </div>

  <div class="addon-views">
    <%
      addon_options = {}
      addon_options[:id] = "addon-basic"
      addon_options[:head] = "API"
    %>
    <% buf = render file: "_form_api", locals: { f: f, addon: addon_options } %>
    <%= render "ss/crud/addon", addon: addon_options do %>
      <%= buf %>
    <% end %>
  </div>

  <footer class="send">
    <% if @crud_buttons %>
      <% @crud_buttons.call f %>
    <% else %>
      <%= f.submit t("ss.buttons.save"), class: 'btn-primary save' %>
      <%= f.button t("ss.buttons.cancel"), class: 'btn-default', type: :reset, onclick: "location.href='#{url_for(action: :show)}'; return false;" %>
    <% end %>
  </footer>

<% end %>

<%= jquery do %> SS.confirmUnloading(); <% end %>
