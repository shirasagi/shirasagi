<%
  depth = 1
  @reject_items = []
%>
<%= jquery do %>
SS_TreeUI.render(".index.items", { collapse_all: true });
<% end %>

<div class="main-box">
  <div class="list-head"><%= render partial: 'search' %></div>
  <table class="index items">
    <thead>
      <tr>
        <th><%= @model.t :name %></th>
        <th><%= @model.t :category_ids %></th>
        <th><%= @model.t :phrase %></th>
        <th><%= @model.t :error %></th>
        <th></th>
      </tr>
    </thead>

    <tbody>
      <% if params[:page].blank? && params[:s].blank? && @cur_node.becomes_with_route.try(:first_suggest).present? %>
        <tr data-depth="<%= depth %>">
          <td class="expandable">
            <%= I18n.t('chat.first_suggest') %>
          </td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
        </tr>
        <% @cur_node.becomes_with_route.first_suggest.each do |suggest| %>
          <% @rendered_items = [] %>
          <%= render partial: 'intent', locals: { suggest: suggest, depth: depth + 1, first_suggest: true } %>
        <% end %>
      <% end %>
      <% @items.and(id: { "$nin" => @reject_items }).each do |item| %>
        <% @rendered_items = [] %>
        <tr data-depth="<%= depth %>">
          <td class="expandable">
            <%= link_to item.name, action: :show, id: item %>
          </td>
          <td><%= item.categories.order_by(order: 1, updated: -1).pluck(:name).join(', ') %></td>
          <td><%= item.phrase.join(', ') %></td>
          <td><%= @model.t(:phrase) + I18n.t('errors.messages.duplicate') if item.duplicate? %></td>
          <td><%= link_to t('chat.links.add_or_edit'), { action: :edit, id: item }, class: :btn if @model.allowed?(:edit, @cur_user, site: @cur_site) %></td>
        </tr>
        <% @reject_items.push(item.id) %>
        <% if !@rendered_items.find { |id| id == item.id } %>
          <% @rendered_items.push(item.id) %>
          <% if item.suggest.present? %>
            <% item.suggest.each do |suggest| %>
              <%= render partial: 'intent', locals: { suggest: suggest, depth: depth + 1, first_suggest: false } %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </tbody>
  </table>
</div>

<%= paginate @items if @items.try(:current_page) %>
