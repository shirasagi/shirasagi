<%
  html_option = { id: "item-form", method: :put, multipart: true, autocomplete: :off }

  if @auto_save_enabled && (url_for(action: :resume_edit) rescue nil)
    # 自動保存が有効 & resume アクションが定義位されている場合
    html_option[:data] = { controller: "ss--auto-save", "ss--auto-save-user-id-value" => @cur_user.id, "ss--auto-save-resume-url-value" => url_for(action: :resume_edit) }
  end
%>

<%= form_with scope: :item, url: url_for(action: :update), method: :put, html: html_option do |f| %>
  <% if @errors.present? %>
    <div id="errorExplanation" class="errorExplanation">
      <h2><%= t("errors.template.header.one") %></h2>
      <p><%= t("errors.template.body") %></p>
      <ul>
        <% @errors.each do |error| %>
          <li><%= br error %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= hidden_field_tag :_updated, params[:_updated] || @item.updated if @item.respond_to?(:updated) %>

  <div class="addon-views">
    <%
      addon_options = {}
      addon_options[:id] = "addon-basic"
      addon_options[:head] = @addon_basic_name || t("ss.basic_info")
    %>
    <% buf = render template: "_form", locals: { f: f, addon: addon_options } %>
    <% if buf.present? %>
      <%= render "ss/crud/addon", addon: addon_options do %>
        <%= buf %>
      <% end %>
    <% end %>
  </div>

  <% if @result %>
    <%= render "ss/crud/addon", addon: { id: "cert-result", head: "Result" } do %>
      <pre><%= @result %></pre>
    <% end %>
  <% end %>

  <footer class="send ss-sticky ss-sticky-bottom">
    <%= f.submit t("sys.diag"), class: 'btn-primary save', data: { disable_with: t("sys.diag") } %>
  </footer>

<% end %>

<%= jquery do %> SS.confirmUnloading(); <% end %>
