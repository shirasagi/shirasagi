<%
  limit ||= SS.config.job.head_logs || 1_000
  reload_interval ||= SS.config.job.reload_interval || 10_000
  show_current_count = local_assigns.fetch(:show_current_count, false)

  url ||= url_for(format: :json)
%>

<section class="main-box task-box" id="task-box-<%= task.id %>">
  <dl class="info">
    <dt><%= task.t :state %></dt>
    <dd class="state" data-state="<%= task.state %>">
      <% if task.state %>
        <%= t("job.state.#{task.state}") %>
      <% end %>
    </dd>

    <% if show_current_count %>
      <dt><%= task.t :current_count %></dt>
      <dd class="count"><%= task.current_count %> / <%= task.total_count %></dd>
    <% end %>

    <dt><%= task.t :started %></dt>
    <dd class="started"><%= task.started.try { |time| content_tag(:time, I18n.l(time, format: :picker), datetime: time.utc.iso8601) } %></dd>

    <dt><%= task.t :closed %></dt>
    <dd class="closed"><%= task.closed.try { |time| content_tag(:time, I18n.l(time, format: :picker), datetime: time.utc.iso8601) } %></dd>
  </dl>

  <div class="logs">
    <%= t('job.log_notice', count: limit) %>
    <textarea class="log" readonly="readonly"><%= task.head_logs(limit).join("\n") %></textarea>
    <% if ::File.exists?(task.log_file_path) %>
      <%= link_to(t('job.download_log'), download_job_cms_task_path(id: task), { class: "btn", target: "_blank" }) rescue nil %>
    <% end %>
  </div>
</section>

<%= jquery do %>
  var $el = $("#task-box-<%= task.id %>");

  var formatTime = function(time) {
    if (! time) {
      return "";
    }

    time = moment(time);
    return $("<time />", { datetime: time.toISOString() }).html(SS.formatTime(time));
  };

  var reload = function () {
    var state = $el.find(".state").data("state");
    if (!state.match(/(ready|running)/)) {
      return;
    }

    $.ajax({
      url: "<%= url %>",
      data: { head_logs: <%= limit %> },
      success: function (data) {
        $el.find(".state").html(data["state_label"] || "").data("state", data["state"]);
        $el.find(".count").html(data["current_count"] + " / " + data["total_count"]);
        $el.find(".started").html(formatTime(data["started"]));
        $el.find(".closed").html(formatTime(data["closed"]));
        $el.find(".log").val(data["head_logs"].join("\n"));
        if (data["state"] === "stop") {
          $el.find(".stop-button").hide();
          $el.find(".run-button").show();
        }
      }
    });
  };

  setInterval(reload, <%= reload_interval %>);

<% end %>
