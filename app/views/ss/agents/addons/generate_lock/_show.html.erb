<%
  return unless @item.generate_lock_enabled?
  return unless Cms::GenerateLock.allowed?(:edit, @cur_user, site: @cur_site)

  addon ||= local_assigns.fetch(:addon, {})
%>

<dl class="see mod-cms-generate-lock">
  <dt><%= @model.t :generate_lock_until %></dt>
  <dd>
    <% if @item.generate_lock_until.present? %>
      <%= I18n.l(@item.generate_lock_until, format: :long) %><span>(<%= @item.generate_lock_user.try(:name) %>)</span>
    <% else %>
      <%= @model.t(:generate_unlocked) %>
    <% end %>
  </dd>
</dl>

<%= select_tag "generate_lock", options_for_select(@item.generate_lock_options) %>
<%= button_tag(@model.t(:generate_lock), name: "lock", type: "button", class: "btn btn-generate-lock", data: { href: cms_apis_generate_lock_lock_path(site: @item, format: "json") }) %>
<%= button_tag(@model.t(:generate_unlock), name: "unlock", type: "button", class: "btn btn-generate-lock", data: { href: cms_apis_generate_lock_unlock_path(site: @item, format: "json") }) %>

<%= jquery do %>
  new SS_GenerateLock("#<%= addon[:id] %>")
<% end %>
