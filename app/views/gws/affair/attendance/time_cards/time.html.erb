<%= form_for :cell, url: { action: :time }, html: { method: :post, multipart: true, class: 'cell-edit' } do |f| %>
  <%= error_messages_for :cell %>

  <%= hidden_field_tag 'ref', params[:ref] %>

  <%
    now = Time.zone.now
    attendance_date = @cur_site.calc_attendance_date(now)
    val = @record.send(@type)

    if val
      val_attendance_date = @cur_site.calc_attendance_date(val)

      day = (val_attendance_date == @cur_date.tomorrow) ? "tomorrow" : "today"
      hour = (val_attendance_date == val.beginning_of_day) ? val.hour : 24 + val.hour
      min = val.min
    else
      day = "today"
      hour = (attendance_date == now.beginning_of_day) ? now.hour : 24 + now.hour
      min = now.min
    end
  %>
  <div class="addon-views">
    <%= render "ss/crud/addon", addon: { id: "addon-basic", head: false } do %>
      <dl class="see">
        <dt><%= t('gws/attendance.edit_cell.time') %></dt>
        <dd>
          <%= f.select(:in_day, day_options, selected: day, include_blank: true) if @type == "leave" %>
          <%= f.select(:in_hour, hour_options, selected: hour, include_blank: true) %>
          <%= f.select(:in_minute, minute_options, selected: min, include_blank: true) %>
          <%= button_tag(t('ss.buttons.clear'), type: 'reset', name: 'clear', class: 'btn') %>
        </dd>
        <dt><%= @model.t :in_reason %></dt>
        <dd>
          <%= f.select(:in_reason_type, reason_type_options) %>
          <%= f.text_field(:in_reason, placeholder: t("ss.remark")) %>
        </dd>
      </dl>
    <% end %>
  </div>

  <footer class="send ss-sticky ss-sticky-bottom">
    <%= f.submit t("ss.buttons.save"), class: 'btn-primary save', data: { disable_with: t("ss.buttons.saving") } %>
    <%= f.button t("gws/attendance.buttons.close"), class: 'btn-default', type: :reset, onclick: "$.colorbox.close(); return false;" %>
  </footer>
<% end %>

<%= jquery do %>
  var $el = $('form.cell-edit');
  $el.on('click', 'button[name=clear]', function() {
    var $select = $('form.cell-edit select[name="cell[in_hour]"]');
    $select.find('option:selected').removeAttr('selected');

    $('form.cell-edit select[name="cell[in_day]"] option:selected').removeAttr('selected');
    $('form.cell-edit select[name="cell[in_hour]"] option:selected').removeAttr('selected');
    $('form.cell-edit select[name="cell[in_minute]"] option:selected').removeAttr('selected');
  });

  var toggleReason = function(ele) {
    if ($(ele).val() == "other") {
      $el.find('[name="cell[in_reason]"]').show();
    } else {
      $el.find('[name="cell[in_reason]"]').hide();
    }
  };
  $el.find('[name="cell[in_reason_type]"]').on('change', function() { toggleReason(this); });
  toggleReason($el.find('[name="cell[in_reason_type]"]'));

  $el.on('submit', function(e) {
    e.preventDefault();
    $(this).ajaxSubmit({
      success: function (data) {
        location.href = data.location;
      },
      error: function(xhr, status, error) {
        var $html = $(xhr.responseText);
        $el.html($html.html());
      }
    });
  });
<% end %>
