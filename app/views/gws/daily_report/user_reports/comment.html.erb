<% addons = @addons || @item.try(:addons) || [] %>

<%= form_for :comment, url: { action: :comment }, html: { id: "item-form", multipart: true, autocomplete: :off } do |f| %>
<%= error_messages_for :comment %>

<div class="addon-views">
  <%
    addon_options = {}
    addon_options[:id] = "addon-basic"
    addon_options[:head] = @addon_basic_name || t("ss.basic_info") if addons.size > 0
  %>
  <% buf = render template: "_comment", locals: { f: f, addon: addon_options } %>
  <% if buf.present? %>
    <%= render "ss/crud/addon", addon: addon_options do %>
      <%= buf %>
    <% end %>
  <% end %>
</div>

<footer class="send">
  <% if @crud_buttons %>
    <% @crud_buttons.call f %>
  <% else %>
    <%= f.submit t("ss.buttons.save"), class: 'btn-primary save', data: { disable_with: t("ss.buttons.saving") } %>
    <%= f.button t("ss.buttons.cancel"), class: 'btn-default', type: :reset, onclick: "location.href='#{url_for(action: :index)}'; return false;" %>
  <% end %>
</footer>

<% end %>

<%= jquery do %> SS.confirmUnloading(); <% end %>
