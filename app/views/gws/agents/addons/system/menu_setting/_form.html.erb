<%
  addon ||= local_assigns.fetch(:addon, {})
  addon[:display_body] = "hide"
%>

<%# 元々アイコンが設定されていないためスキップするメニュータイプ %>
<% skip_icon_types = %w(staff_record links contrast) %>

<% render_menu_setting_conf = proc do |type, fallback_label| %>
  <dl class="see addon-gws-system-menu-setting">
    <dt><%= t('gws.site_config') %></dt>
    <dd>
      <%= f.select "menu_#{type}_state", { t('ss.options.state.show') => "show" } %>
      <%= f.text_field("menu_#{type}_label", value: @item.send("menu_#{type}_label"), placeholder: fallback_label || t("modules.gws/#{type}")) %>
    </dd>
    <dt class="depth-2"><%= t("gws.buttons.change_menu_icon") %></dt>
    <dd>
      <span class="menu-icon-field">
        <% if @item.send("menu_#{type}_icon_image").present? %>
          <%= image_tag @item.send("menu_#{type}_icon_image").url, class: "icon-#{type.to_s.dasherize}", style: "width: 32px; height: 32px;" %>
        <% else %>
          <span class="ss-icon ss-icon-<%= type.to_s.dasherize %>"></span>
        <% end %>
        <%= f.ss_file_field "menu_#{type}_icon_image", accepts: SS::File::IMAGE_FILE_EXTENSIONS + [".svg"] %>
      </span>
    </dd>
  </dl>
<% end %>

<% render_menu_setting = proc do |type, fallback_label| %>
  <% if type.to_s == "conf" %>
    <% render_menu_setting_conf.call(type, fallback_label) %>
  <% else %>
    <dl class="see addon-gws-system-menu-setting">
      <dt><%= @model.t("menu_#{type}_state") %><%= @model.tt("menu_#{type}_state") %></dt>
      <dd>
        <%= f.select "menu_#{type}_state", @item.send("menu_#{type}_state_options") %>
        <%= f.text_field("menu_#{type}_label", value: @item.send("menu_#{type}_label"), placeholder: fallback_label || t("modules.gws/#{type}")) %>
      </dd>
      <% unless skip_icon_types.include?(type.to_s) %>
      <dt class="depth-2"><%= t("gws.buttons.change_menu_icon") %></dt>
      <dd>
        <span class="menu-icon-field">
          <% if @item.send("menu_#{type}_icon_image").present? %>
            <%= image_tag @item.send("menu_#{type}_icon_image").url, class: "icon-#{type.to_s.dasherize}", style: "width: 32px; height: 32px;" %>
          <% else %>
            <span class="ss-icon ss-icon-<%= type.to_s.dasherize %>"></span>
          <% end %>
          <%= f.ss_file_field "menu_#{type}_icon_image", accepts: SS::File::IMAGE_FILE_EXTENSIONS + [".svg"] %>
        </span>
      </dd>
      <% end %>
    </dl>
  <% end %>
<% end %>

<% render_menu_setting.call(:portal, t('modules.gws/portal')) %>
<% render_menu_setting.call(:notice) %>
<% render_menu_setting.call(:schedule) %>
<% render_menu_setting.call(:todo, t('mongoid.models.gws/schedule/todo')) %>
<% render_menu_setting.call(:reminder, t('mongoid.models.gws/reminder')) %>
<% render_menu_setting.call(:presence, t('mongoid.models.gws/presence')) %>
<% render_menu_setting.call(:attendance) %>
<% render_menu_setting.call(:affair) %>
<% render_menu_setting.call(:daily_report) %>
<% render_menu_setting.call(:bookmark) %>
<% render_menu_setting.call(:memo) %>
<% render_menu_setting.call(:workload) %>
<% render_menu_setting.call(:report) %>
<% render_menu_setting.call(:workflow) %>
<% render_menu_setting.call(:workflow2) %>
<% render_menu_setting.call(:circular) %>
<% render_menu_setting.call(:monitor) %>
<% render_menu_setting.call(:survey) %>
<% render_menu_setting.call(:board) %>
<% render_menu_setting.call(:faq) %>
<% render_menu_setting.call(:qna) %>
<% render_menu_setting.call(:discussion) %>
<% render_menu_setting.call(:share) %>
<% render_menu_setting.call(:shared_address) %>
<% render_menu_setting.call(:personal_address) %>
<% render_menu_setting.call(:staff_record, t('gws/staff_record.staff_records')) %>
<% render_menu_setting.call(:links, t('mongoid.models.gws/link')) %>
<% render_menu_setting.call(:contrast, t('mongoid.models.gws/contrast')) %>
<% render_menu_setting.call(:tabular, t('modules.gws/tabular')) %>
<% render_menu_setting.call(:elasticsearch) %>
<% render_menu_setting.call(:conf, t('gws.site_config')) %>
