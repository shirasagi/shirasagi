<%

@cur_node = @cur_node.becomes_with_route if @cur_node
if @cur_node && (st_categories = @cur_node.st_categories).present?
  conds = [{ :id.in => @cur_node.st_category_ids }]
  st_categories.pluck(:filename).each do |filename|
    conds << { filename: /#{::Regexp.escape(filename)}\// }
  end
  categories = Category::Node::Base.site(@cur_site).readable(@cur_user, site: @cur_site).where("$and" => [{ "$or" => conds }])
  cate_options = {}
else
  categories = Category::Node::Base.site(@cur_site).readable(@cur_user, site: @cur_site)
  cate_options = { root_and_descendants: true }
end

%>
<%= jquery do %> SS_AddonTabs.hide(".mod-category-category"); <% end %>

<dl class="see mod-category-category category-form">
  <dt class="wide"><%= @model.t :categories %><%= @model.tt :categories %></dt>
  <dd class="wide">
    <%= f.hidden_field "category_ids[]", value: "" %>
    <% render_cate_form categories.tree_sort.to_a, cate_options %>
  </dd>
</dl>
