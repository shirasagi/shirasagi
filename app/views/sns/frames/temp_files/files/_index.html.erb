<div class="cms-temp-file" data-controller="ss--temp-file">
  <div class="search-ui-form">
    <%= form_with scope: :s, url: url_for(action: :index), method: :get, class: "search", data: { turbo: true } do |f| %>
      <div>
        <label>
          <%= check_box_tag "#{f.object_name}[types][]", "temp_file", @s.types && @s.types.include?("temp_file"), id: nil, data: { controller: "ss--submit-on-change" } %>
          <%= t("mongoid.models.ss/temp_file") %>
        </label>
        <% if @ss_mode == :cms %>
        (
          <label>
            <%= radio_button_tag "#{f.object_name}[node_bound]", "current", @s.node_bound != "all", id: nil, data: { controller: "ss--submit-on-change" } %>
            <%= cur_node ? "#{t("cms.node")}: #{cur_node.name}" : t("cms.root") %>
          </label>
          <label>
            <%= radio_button_tag "#{f.object_name}[node_bound]", "all", @s.node_bound == "all", id: nil, data: { controller: "ss--submit-on-change" } %>
            <%= t("ss.options.state.all") %>
          </label>
        )
        <% end %>
        <label>
          <%= check_box_tag "#{f.object_name}[types][]", "user_file", @s.types && @s.types.include?("user_file"), id: nil, data: { controller: "ss--submit-on-change" } %>
          <%= t("mongoid.models.ss/user_file") %>
        </label>
        <% if @ss_mode == :cms %>
          <label>
            <%= check_box_tag "#{f.object_name}[types][]", "cms_file", @s.types && @s.types.include?("cms_file"), id: nil, data: { controller: "ss--submit-on-change" } %>
            <%= t("mongoid.models.cms/file") %>
          </label>
        <% end %>
      </div>
      <%= hidden_field_tag :single, params[:single] if params[:single].present? %>
      <% if accepts.present? %>
        <% accepts.each do |accept| %>
          <%= hidden_field_tag "accepts[]", accept %>
        <% end %>
      <% end %>
      <%= f.text_field :keyword %>
      <%= f.submit  t("ss.buttons.search"), class: :btn %>
    <% end %>
  </div>

  <div class="user-files">
    <% items.each do |item| %>
      <%
        item = item.becomes_with_model
        if @ss_mode == :cms && item.is_a?(SS::TempFile)
          item = item.becomes_with(Cms::TempFile)
        end

        component = SS::TempFileViewComponent.new(
          cur_site: @cur_site, cur_user: @cur_user, cur_node: @cur_node, file: item,
          show_attach: false, show_opendata: false)
      %>
      <% component.with_delete_action do %>
        <% if item.allowed?(:edit, @cur_user, site: @cur_site) %>
          <%= link_to t("ss.buttons.edit"), url_for(action: :edit, id: item, accepts: accepts, s: params[:s].try(:to_unsafe_h)), class: "btn", data: { turbo: true } %>
        <% end %>
        <% if item.allowed?(:delete, @cur_user, site: @cur_site) %>
          <%= button_tag t("ss.buttons.delete"), type: :button, name: :delete, class: "btn", data: { href: url_for(action: :destroy, id: item, accepts: accepts, s: params[:s].try(:to_unsafe_h), format: :json), action: "ss--temp-file#deleteFile" } %>
        <% end %>
      <% end %>
      <%= render component %>
    <% end %>
  </div>

  <%= paginate items if items.try(:current_page) %>
</div>
