<%= coffee do %>
$ ->

  $(".workflow-route-cacnel").on "click", (e) ->
    uri = []
    uri[0] = location.pathname.split("/")[0]
    uri[1] = location.pathname.split("/")[1]
    uri[2] = "opendata" + "<%= @cur_node? @cur_node.id : "" %>"
    uri[3] = "workflow"
    uri[4] = "idea_comments"
    uri[5] = location.pathname.split("/")[6]
    uri[6] = "wizard"
    uri = uri.join("/")
    $.ajax
      type: "get"
      url: uri
      async: false
      success: (html, status) ->
        $(".workflow-partial-section").html(html)
      error: (xhr, status) ->
        try
          errors = $.parseJSON(xhr.responseText)
          alert(["== Error =="].concat(errors).join("\n"));
        catch
          alert(["== Error =="].concat(xhr["statusText"]).join("\n"));
    e.preventDefault()

  $(".workflow-multi-select").multiSelect
    selectionHeader: "<div class='selectionHeader'><%= t "workflow.request_to" %></div>"
    selectableHeader: "<div class='selectableHeader'><%= t "workflow.selectable_users" %></div>"

  $(".ms-container").each ->
    $(this).find(".selectableHeader").css("background-color", "#f0f3f3")
    $(this).find(".selectionHeader").css("background-color", "#f0f3f3")

<% end %>

<%
  userids = []
  @item.workflow_approvers.each do |workflow_approver|
    userids << "#{workflow_approver[:level]},#{workflow_approver[:user_id]}"
  end if @item.workflow_approvers.present?
%>

<dl class="see request-setting">
  <dt><%= t("workflow.route") %></dt>
  <dd><%= @route.name %></dd>
  <dt><%= @model.t :workflow_comment %><%= @model.tt :workflow_comment %></dt>
  <dd><%= text_area :workflow, :comment, value: @item.workflow_comment %></dd>
</dl>
<% @route.levels.each do |level| %>
  <dl class="see request-setting">
    <dt><%= @route.class.t :level, level: level %></dt>
    <dd>
      <%= hidden_field_tag "workflow_required_counts", @route.required_count_at(level) %>
      <%= @route.required_count_label_at(level) %>
    </dd>
    <dd>
      <%
        users = @route.approver_users_at(level)
        users = users.select(&:present?).select do |user|
          @item.allowed?(:approve, user, site: @cur_site)
        end
        names = users.map(&:long_name)
      %>
      <% users.each do |user| %>
        <%= hidden_field_tag "workflow_approvers", "#{level},#{user._id},pending," %>
      <% end %>
      <%= br names.join("\n") %>
    </dd>
  </dl>
<% end %>
<dl class="see request-setting">
  <dd>
    <div class="buttons">
      <%= button_tag t("workflow.state.request"), { updatetype: :request, class: "update-item" } %>
      <%= button_tag t("workflow.state.cancel"), { class: "workflow-route-cacnel" } %>
    </div>
  </dd>
</dl>
