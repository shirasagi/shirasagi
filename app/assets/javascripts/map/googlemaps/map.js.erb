this.Googlemaps_Map = (function () {
  function Googlemaps_Map() {
  }

  Googlemaps_Map.map = null;

  Googlemaps_Map.form = null;

  Googlemaps_Map.center = [36.204824, 138.252924];

  Googlemaps_Map.defaultZoom = 13;

  // -1 means auto
  Googlemaps_Map.zoom = -1;

  Googlemaps_Map.markers = null;

  Googlemaps_Map.openedInfo = null;

  Googlemaps_Map.resized = null;

  Googlemaps_Map.kmlLayer = null;

  Googlemaps_Map.attachMessage = function (id) {
    google.maps.event.addListener(Googlemaps_Map.markers[id]["marker"], 'click', function (event)
    {
      if (Googlemaps_Map.openedInfo) {
        Googlemaps_Map.openedInfo.close();
      }
      if (Googlemaps_Map.markers[id]["window"]) {
        Googlemaps_Map.markers[id]["window"].open(Googlemaps_Map.markers[id]["marker"].getMap(), Googlemaps_Map.markers[id]["marker"]);
      }
      return Googlemaps_Map.openedInfo = Googlemaps_Map.markers[id]["window"];
    });
    return google.maps.event.addListener(Googlemaps_Map.markers[id]["window"], 'closeclick', function (event) {
      return Googlemaps_Map.openedInfo = null;
    });
  };

  Googlemaps_Map.setForm = function (form) {
    return this.form = form;
  };

  Googlemaps_Map.load = function (selector, options) {
    set_center_position = options.set_center_position
    if (set_center_position) {
      set_center_position = set_center_position.split(',').map(Number);
      var lat, lon;
      lat = set_center_position[0];
      lon = set_center_position[1];
      if (!(lat && !isNaN(lat))) {
        set_center_position = null;
      }
      if (!(lon && !isNaN(lon))) {
        set_center_position = null;
      }
      if (lat >= -90 && lat <= 90 && lon >= -180 && lon <= 180) {
        set_center_position
      } else {
        set_center_position = null;
      }
    }
    set_zoom_level = options.set_zoom_level
    if (options && options.zoom) {
      Googlemaps_Map.zoom = options.zoom;
    }
    default_zoom = options.default_zoom || Googlemaps_Map.defaultZoom

    var mapOptions = {
      center: new google.maps.LatLng(this.center[0], this.center[1]),
      zoom: Googlemaps_Map.getZoom(),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      panControl: false,
      zoomControl: true,
      zoomControlOptions: {
        style: google.maps.ZoomControlStyle.LARGE
      },
      mapTypeControl: true,
      scaleControl: true,
      scrollwheel: true,
      streetViewControl: true,
      overviewMapControl: true,
      overviewMapControlOptions: {
        opened: true
      }
    };
    Googlemaps_Map.map = new google.maps.Map($(selector).get(0), mapOptions);
  };

  Googlemaps_Map.getZoom = function () {
    if (Googlemaps_Map.zoom >= 0) {
      return Googlemaps_Map.zoom;
    }

    return Googlemaps_Map.defaultZoom;
  }

  Googlemaps_Map.resize = function () {
    google.maps.event.trigger(this.map, "resize");
    if (!this.resized) {
      this.map.setCenter(new google.maps.LatLng(this.center[0], this.center[1]));
      if (this.form) {
        this.form.renderMarkers();
      }
    }
    return this.resized = true;
  };

  Googlemaps_Map.renderMarkers = function () {
    if (this.form) {
      return this.form.renderMarkers();
    }
  };

  Googlemaps_Map.renderEvents = function () {
    if (this.form) {
      return this.form.renderEvents();
    }
  };

  Googlemaps_Map.setMarkers = function (markers) {
    var markerBounds, zoomChangeBoundsListener;
    Googlemaps_Map.markers = markers;
    markerBounds = new google.maps.LatLngBounds();
    $.each(Googlemaps_Map.markers, function (id, value) {
      var marker_html, name, text;
      if (value["image"]) {
        Googlemaps_Map.markers[id]["marker"] = new google.maps.Marker({
          position: new google.maps.LatLng(value["loc"][0], value["loc"][1]),
          icon: value["image"],
          map: Googlemaps_Map.map
        });
      } else {
        Googlemaps_Map.markers[id]["marker"] = new google.maps.Marker({
          position: new google.maps.LatLng(value["loc"][0], value["loc"][1]),
          map: Googlemaps_Map.map
        });
      }
      markerBounds.extend(new google.maps.LatLng(value["loc"][0], value["loc"][1]));
      if (value["html"]) {
        marker_html = value["html"];
        Googlemaps_Map.markers[id]["window"] = new google.maps.InfoWindow({
          content: marker_html
        });
        Googlemaps_Map.attachMessage(id);
      } else if (value["name"] || value["text"]) {
        name = value["name"];
        text = value["text"];
        marker_html = '<div class="marker-info">';
        if (name && name !== "") {
          marker_html += '<p>' + name + '</p>';
          if (text && text !== "") {
            $.each(text.split(/[\r\n]+/), function () {
              if (this.match(/^https?:\/\//)) {
                return marker_html += '<p><a href="' + this + '">' + this + '</a></p>';
              } else {
                return marker_html += '<p>' + this + '</p>';
              }
            });
          }
        }
        marker_html += '</div>';
        Googlemaps_Map.markers[id]["window"] = new google.maps.InfoWindow({
          content: marker_html
        });
        Googlemaps_Map.attachMessage(id);
      }
    });

    Googlemaps_Map.adjustMarkerBounds(Googlemaps_Map.markers.length, markerBounds);
  };

  Googlemaps_Map.setKmlLayer = function (url) {
    Googlemaps_Map.kmlLayer = new google.maps.KmlLayer({
      url: url,
      suppressInfoWindows: true,
      preserveViewport: false
    });
  };

  Googlemaps_Map.setGeoJson = function (url) {
    Googlemaps_Map.map.data.setStyle({
      fillColor: "#b2c9e8",
      strokeColor: "#5A88C6",
      strokeWeight: 1
    });
    Googlemaps_Map.map.data.loadGeoJson(url, {}, function(data) {
      var bounds = new google.maps.LatLngBounds();
      var locs = [];

      data.forEach(function (feature) {
        feature.getGeometry().forEachLatLng(function (LatLng) {
          bounds.extend(LatLng);
          locs.push(LatLng);
        });
      });

      Googlemaps_Map.adjustMarkerBounds(locs.length, bounds);
    });
  };

  Googlemaps_Map.adjustMarkerBounds = function(pointCount, bounds) {
    if (pointCount <= 0 && !set_center_position && !set_zoom_level) {
      Googlemaps_Map.map.setCenter(new google.maps.LatLng(Googlemaps_Map.center[0], Googlemaps_Map.center[1]));
      Googlemaps_Map.map.setZoom(default_zoom);
      return;
    }

    if (pointCount <= 0 && !set_center_position && set_zoom_level) {
      Googlemaps_Map.map.setCenter(new google.maps.LatLng(Googlemaps_Map.center[0], Googlemaps_Map.center[1]));
      Googlemaps_Map.map.setZoom(set_zoom_level);
      return;
    }

    if (pointCount == 1 && !set_center_position && !set_zoom_level) {
      Googlemaps_Map.map.setCenter(bounds.getCenter());
      Googlemaps_Map.map.setZoom(default_zoom);
      return;
    }

    if (pointCount <= 2 && !set_center_position && !set_zoom_level) {
      Googlemaps_Map.map.setCenter(bounds.getCenter());
      Googlemaps_Map.map.fitBounds(bounds);
      return;
    }

    if (set_center_position && set_zoom_level) {
      Googlemaps_Map.map.setCenter(new google.maps.LatLng(set_center_position[0], set_center_position[1]));
      Googlemaps_Map.map.setZoom(set_zoom_level);
      return;
    }

    if (set_center_position && !set_zoom_level) {
      Googlemaps_Map.map.setCenter(new google.maps.LatLng(set_center_position[0], set_center_position[1]));
      Googlemaps_Map.map.setZoom(default_zoom);
      return;
    }

    if (!set_center_position && set_zoom_level) {
      Googlemaps_Map.map.setCenter(bounds.getCenter());
      Googlemaps_Map.map.setZoom(set_zoom_level);
      return;
    };
  };

  return Googlemaps_Map;
})();
