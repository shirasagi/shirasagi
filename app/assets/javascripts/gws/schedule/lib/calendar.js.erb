this.Gws_Schedule_Calendar = (function () {
  function Gws_Schedule_Calendar() {
  }

  Gws_Schedule_Calendar.messages = {
    noPlan: '<%= I18n.t("gws/schedule.no_plan") %>'
  };

  Gws_Schedule_Calendar.render = function (selector, opts, init) {
    var params;
    if (opts == null) {
      opts = {};
    }
    if (init == null) {
      init = {};
    }
    params = this.defaultParams(selector, opts);
    if (opts['restUrl']) {
      $.extend(true, params, this.editableParams(selector, opts));
    }
    if (opts['restUrl']) {
      $.extend(true, params, this.tapMenuParams(selector, opts));
    }
    $.extend(true, params, opts);
    $(selector).fullCalendar(params);
    this.renderInitialize(selector, init);
    return this.overrideAddLink(selector);
  };

  Gws_Schedule_Calendar.renderInitialize = function (selector, init) {
    if (init == null) {
      init = {};
    }
    init['viewTodo'] || (init['viewTodo'] = 'active');
    if (init['view']) {
      $(selector).fullCalendar('changeView', init['view']);
    }
    if (init['date']) {
      $(selector).fullCalendar('gotoDate', init['date']);
    }
    if (init['viewFormat'] === 'list') {
      $.fullCalendar.toggleListFormat(selector);
      $(selector).find('.fc-withListView-button').addClass("fc-state-active");
    }
    if (init['viewTodo'] === 'active') {
      $(selector).find('.fc-withTodo-button').addClass("fc-state-active");
    }
    if (init['viewAttendance'] === 'active') {
      $(selector).find('.fc-withAbsence-button').addClass("fc-state-active");
    }
    Gws_Schedule_View.renderSideCalendars(selector);
    return $(selector + "-header .calendar-text").each(function () {
      var data, wrap;
      wrap = $(this);
      data = $(this).find('.calendar-text-popup').prop('outerHTML');
      return wrap.find('.calendar-text-link').click(function () {
        Gws_Popup.render($(this), $(data).show());
        return false;
      });
    });
  };

  Gws_Schedule_Calendar.defaultParams = function (selector, opts) {
    return {
      buttonText: {
        listMonth: "<%= I18n.t('gws/schedule.calendar.buttonText.listMonth') %>"
      },
      columnFormat: {
        month: "ddd",
        week: "M/D [(]ddd[)]",
        day: "M/D [(]ddd[)]"
      },
      customButtons: {
        withTodo: {
          text: "<%= I18n.t('gws/schedule.calendar.buttonText.withTodo') %>",
          click: function (e) {
            $('.fc-event-todo').toggle(!$(this).hasClass('fc-state-active'));
            $(this).toggleClass("fc-state-active");
            return Gws_Schedule_Calendar.updateNoPlanVisibility($(this).closest(".fc"));
          }
        },
        withAbsence: {
          text: "<%= I18n.t('gws/schedule.calendar.buttonText.withAbsence') %>",
          click: function (e) {
            $('.fc-event-user-attendance-absence').toggle(!$(this).hasClass('fc-state-active'));
            $(this).toggleClass("fc-state-active");
            return Gws_Schedule_Calendar.updateNoPlanVisibility($(this).closest(".fc"));
          }
        },
        withListView: {
          text: "<%= I18n.t('gws/schedule.calendar.buttonText.listMonth') %>",
          click: function (e) {
            $.fullCalendar.toggleListFormat(selector);
            $(selector).fullCalendar('refetchEvents');
            $(window).trigger('resize'); //for AgendaView

            return $(this).toggleClass("fc-state-active");
          }
        }
      },
      contentHeight: 'auto',
      displayEventEnd: {
        basicWeek: true
      },
      endParam: 's[end]',
      fixedWeekCount: false,
      slotEventOverlap: false,
      header: {
        left: 'today prev next title',
        right: 'withAbsence withTodo month,basicWeek,agendaDay withListView'
      },
      lang: 'ja',
      nextDayThreshold: '00:00:00', // 複数日表示の閾値
      schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
      slotLabelFormat: 'HH:mm',
      startParam: 's[start]',
      timeFormat: 'HH:mm',
      titleFormat: {
        month: "<%= I18n.t('gws/schedule.calendar.titleFormat.month') %>",
        week: "<%= I18n.t('gws/schedule.calendar.titleFormat.week') %>",
        day: "<%= I18n.t('gws/schedule.calendar.titleFormat.day') %>"
      },
      loading: function (isLoading, view) {
        if (isLoading) {
          if ($(selector).hasClass("fc-list-format")) {
            return $(this).find('.fc-view').prepend('<span class="fc-loading"><%= I18n.t("gws/schedule.loading") %></span>');
          } else {
            return $(this).find('.fc-widget-content').eq(0).prepend('<span class="fc-loading"><%= I18n.t("gws/schedule.loading") %></span>');
          }
        } else {
          return $(this).find('.fc-loading').remove();
        }
      },
      eventAfterAllRender: function (view) {
        var attendance, todo;
        todo = $('.fc .fc-withTodo-button');
        if (todo.length) {
          if (todo.hasClass('fc-state-active')) {
            $('.fc .fc-event-todo').show();
          } else {
            $('.fc .fc-event-todo').hide();
          }
        }
        attendance = $('.fc .fc-withAbsence-button');
        if (attendance.length) {
          if (attendance.hasClass('fc-state-active')) {
            $('.fc .fc-event-user-attendance-absence').show();
          } else {
            $('.fc .fc-event-user-attendance-absence').hide();
          }
        }
        Gws_Schedule_Calendar.updateNoPlanVisibility(view.el.closest(".fc"));
        return Gws_Schedule_Calendar.changePrintPreviewPortrait(view);
      }
    };
  };

  Gws_Schedule_Calendar.viewStateQuery = function (view) {
    var attendance, format, todo;
    format = view.el.closest(".fc").hasClass('fc-list-format') ? 'list' : 'default';
    todo = $('.fc .fc-withTodo-button').hasClass("fc-state-active") ? 'active' : 'inactive';
    attendance = $('.fc .fc-withAbsence-button').hasClass("fc-state-active") ? 'active' : 'inactive';
    return "calendar[path]=" + location.pathname + "&calendar[view]=" + view.name + "&calendar[viewFormat]=" + format + "&calendar[viewTodo]=" + todo + "&calendar[viewAttendance]=" + attendance;
  };

  Gws_Schedule_Calendar.tapMenuParams = function (selector, opts) {
    var url;
    url = opts['restUrl'];
    return {
      dayClick: function (date, event, view) {
        var links, now, start, state, todo;
        links = '';
        if (opts['tapMenu']) {
          now = new Date;
          start = (date.format()) + "T" + (now.getHours()) + ":00:00";
          state = ("calendar[date]=" + (date.format()) + "&") + Gws_Schedule_Calendar.viewStateQuery(view);
          links = "<a href='" + url + "/new?start=" + start + "&" + state + "' class='add-plan'><%= I18n.t 'gws/schedule.links.add_plan' %></a>";
          todo = url.replace(/schedule\/.*/, 'schedule/todo/-/readables');
          links += "<a href='" + todo + "/new?start=" + start + "&" + state + "' class='add-plan'><%= I18n.t 'gws/schedule.links.add_todo' %></a>";
        }
        if ($('#calendar-controller').length === 0) {
          if (view.name !== 'month') {
            links += '<a href="" data-view="month"><%= I18n.t "gws/schedule.links.show_month" %></a>';
          }
          if (view.name !== 'basicWeek') {
            links += '<a href="" data-view="basicWeek"><%= I18n.t "gws/schedule.links.show_week" %></a>';
          }
          if (view.name !== 'agendaDay') {
            links += '<a href="" data-view="agendaDay"><%= I18n.t "gws/schedule.links.show_day" %></a>';
          }
        }
        if (links) {
          $("body").append('<div class="tap-menu">' + links + '</div>');
          if (event.pageX + $(".tap-menu").width() > $(window).width()) {
            $(".tap-menu").css("top", event.pageY - 5).css("right", 5).show();
          } else {
            $(".tap-menu").css("top", event.pageY - 5).css("left", event.pageX - 5).show();
          }
          $(".tap-menu a").click(function () {
            var cal;
            if ($(this).data('view')) {
              cal = view.calendar.getCalendar();
              cal.changeView($(this).data('view'));
              cal.gotoDate(date);
              $(".tap-menu").remove();
              return false;
            }
          });
          return $(".tap-menu").mouseleave(function () {
            return $(".tap-menu").remove();
          });
        }
      }
    };
  };

  Gws_Schedule_Calendar.editableParams = function (selector, opts) {
    var url;
    url = opts['restUrl'];
    return {
      editable: true,
      eventClick: function (event, jsEvent, view) {
        var popup_url, state, target;
        if (event.noPopup) {
          return;
        }
        target = $(this);
        Gws_Popup.render(target, "<div class='fc-popup'><span class='fc-loading'><%= I18n.t('gws/schedule.loading') %></span></div>");
        popup_url = event.restUrl ? event.restUrl : url;
        state = ("calendar[date]=" + (event.start.format('YYYY-MM-DD')) + "&") + Gws_Schedule_Calendar.viewStateQuery(view);
        return $.ajax({
          url: popup_url + "/" + event.id + "/popup",
          success: function (data) {
            $('.fc-popup').html(data);
            $('.fc-popup').find('a').each(function () {
              return $(this).attr('href', $(this).attr('href') + ("?" + state));
            });
            return Gws_Popup.renderPopup(target);
          }
        });
      },
      eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
        var drop_url, end;
        end = null;
        if (event.end) {
          end = event.end.format();
        }
        drop_url = event.restUrl ? event.restUrl : url;
        return $.ajax({
          type: 'PUT',
          url: (drop_url + "/") + event.id + ".json",
          data: {
            item: {
              api: 'drop',
              api_start: event.start.format(),
              api_end: end
            }
          },
          success: function (data, dataType) {
            var viewId;
            viewId = view.el.closest('.calendar').attr('id');
            return $('.calendar.multiple').not("#" + viewId).fullCalendar('refetchEvents');
          },
          error: function (xhr, status, error) {
            alert(xhr.responseJSON.join("\n"));
            return revertFunc();
          }
        });
      },
      eventResize: function (event, delta, revertFunc) {
        return $.ajax({
          type: 'PUT',
          url: (url + "/") + event.id + ".json",
          data: {
            item: {
              api: 'resize',
              api_start: event.start.format(),
              api_end: event.end.format()
            }
          },
          success: function (data, dataType) {
            var viewId;
            viewId = view.el.closest('.calendar').attr('id');
            return $('.calendar.multiple').not("#" + viewId).fullCalendar('refetchEvents');
          },
          error: function (xhr, status, error) {
            alert(xhr.responseJSON.join("\n"));
            return revertFunc();
          }
        });
      }
    };
  };

  Gws_Schedule_Calendar.changePrintPreviewPortrait = function (view) {
    if ($('body').hasClass('print-preview')) {
      if (view.type === 'agendaDay' || view.type === 'listMonth' || view.el.closest(".fc").hasClass("fc-list-format")) {
        $('body').removeClass('horizontal');
        return $('body').addClass('vertical');
      } else {
        $('body').removeClass('vertical');
        return $('body').addClass('horizontal');
      }
    }
  };

  Gws_Schedule_Calendar.overrideAddLink = function (selector) {
    return $('.add-plan').click(function (ev) {
      var date, href, now, start, state, view;
      now = new Date;
      date = $(selector).fullCalendar('getDate');
      view = $(selector).fullCalendar('getView');
      href = $(this).attr('href').replace(/\?.*/, '');
      if (!(view.start.isBefore(now) && view.end.isAfter(now))) {
        start = (date.format('YYYY-MM-DD')) + "T" + (now.getHours()) + ":00:00";
        state = ("calendar[date]=" + (date.format()) + "&") + Gws_Schedule_Calendar.viewStateQuery(view);
        href = href + ("?start=" + start + "&" + state);
      }
      return $(this).attr('href', href);
    });
  };

  Gws_Schedule_Calendar.updateNoPlanVisibility = function (selector) {
    var no_plan;
    no_plan = $(selector).find('.fc-listMonth-view-container .no-plan');
    if (no_plan.length !== 0) {
      if ($('.fc-event:visible').length === 0) {
        return no_plan.show();
      } else {
        return no_plan.hide();
      }
    }
  };

  return Gws_Schedule_Calendar;

})();

